:q
-sin(1)
:q
-(sin 1)
- sin(1)
-sin(1)
sin 2
sin 1
sin 1
(-sin(8*pi*x)/2 + 0.5) * green
:q
(-sin(8*pi*x)/2 + 0.5) * green
:q
:type [[5, 6, (8*9)+2], 0, 1]
:type [red, red, red]
:type []
:type True
:type False
:type 3
:type 3+3
:type 3+True
red + purple
(x+1)/2*red + (1-(x+1)/2)*blue
if 1 == 2 then 1 else 1
quilt 0.4 yellow red (quilt green orange blue purple)
[0.5,0.5,0.5]
[(x+1)/2, (y+1)/2, 0.5]
:type (y+1)/2
:type 0.5
:type (x+1)/2
:q
[(x+1)/2, (y+1)/2, 0.5]
:q
[0.5,0.5,0.5]
(x+1)/2
[(x+1)/2, (y+1)/2, 0.5]
quilt 0.4 yellow red (quilt green orange blue purple)
if 1 == 2 then 1 else 1
if 1 then 1 else 1
1 + 1
1 + True
:q
quilt 0.4 yellow red (quilt green orange blue purple)
[(x+1)/2, (y+1)/2, 0.5]
(x+1)/2*red + (1-(x+1)/2)*blue
if x < y then red else blue 
red + (blue + orange)
red + blue
blue
red + purple
red + purple
yellow + True
yellow + False
1 + True
quilt 0.4 yellow red (quilt green orange blue purple)
red * 1243
red * 2
red + purple
red + orange
red + bluye
quilt 0.4 yellow red (quilt green orange blue purple)
:q
quilt 0.4 yellow red (quilt green orange blue purple)
:q
Lq
quilt 0.4 yellow red (quilt green orange blue purple)
:q
quilt 0.4 yellow red (quilt green orange blue purple)
:q
quilt 0.4 yellow red (quilt green orange blue purple)
:q
:
quilt 0.4 yellow red (quilt green orange blue purple)
:q
quilt 0.4 yellow red (quilt green orange blue purple)
:q
quilt 0.4 yellow red (quilt green orange blue purple)
[0.4,0.4,0.4]
[.4,.4,.4]
[.4,.4,.4]
0.4
quilt 0.4 yellow red (quilt green orange blue purple)
quilt 0.4 yellow red (quilt green orange blue purple)
:q
[(x+1)/2, (y+1)/2, 0.5]
(x+1)/2*red + (1-(x+1)/2)*blue
if x < y then red else blue
[0.2,0.8,0.5]
red + blue
blue
red
:q
[0.2, 0.8, 0.5]
projects/explicitcolor.png
red + blue
:help
asdf
